import Head from "next/head";
import { Inter } from "@next/font/google";
import { BiGroup, BiLogOutCircle, BiNote, BiUser,BiXCircle } from "react-icons/bi";
import { unauthenticate } from "../utils/auth";
import { useRouter } from "next/router";
import Footer from "../components/Layout/Footer";

const inter = Inter({ subsets: ["latin"] });

function Layout({ user, children }) {
  console.log("Layout : user -- \n" + user)
  const router = useRouter();
  const logout = () => {
    const currentUrl = router.asPath;
    if (currentUrl == "/testqvt/take_diagnostic_test") {
      const confirmed = window.confirm("Êtes-vous sûr de vouloir quitter la page de Test? Vos réponses au questionnaire ne seront pas enregistrées !!");
      if (confirmed) {
        unauthenticate();
        router.push("/auth/login");
      }
    } else {
      unauthenticate();
      router.push("/auth/login");
    }
  };

  const taketest = () => {
    const currentUrl = router.asPath;
    if (currentUrl == "/testqvt/take_diagnostic_test") {
      const confirmed = window.confirm("Vous vous apprêtez à sortir de votre auto-diagnostic, confirmez-vous votre choix ? Vos réponses au questionnaire ne seront pas enregistrées !!");
      if (confirmed) {
        router.push("/testqvt/take_diagnostic_test");
      }
    } else {
      router.push("/testqvt/take_diagnostic_test");
    }
  };

  const seeresult = () => {
    const currentUrl = router.asPath;
    if (currentUrl == "/testqvt/take_diagnostic_test") {
      const confirmed = window.confirm("Vous vous apprêtez à sortir de votre auto-diagnostic, confirmez-vous votre choix ? Vos réponses au questionnaire ne seront pas enregistrées !!");
      if (confirmed) {
        router.push("/result/perso");
      }
    } else {
      router.push("/result/perso");
    }
  };

  const getusers = async () => {
    const currentUrl = router.asPath;
    if (currentUrl == "/testqvt/take_diagnostic_test") {
      const confirmed = window.confirm("Vous vous apprêtez à sortir de votre auto-diagnostic, confirmez-vous votre choix ? Vos réponses au questionnaire ne seront pas enregistrées !!");
      if (confirmed) {
        router.push("/admin/manage_users_page");
      }
    } else {
      router.push("/admin/manage_users_page");
    }
  };

  const getInvalidUsers = async()=>{
    router.push({
      pathname: '/admin/manage_users_page',
      query: {
        user:user._id,
        username:user.username,
       }
    },'/admin/manage_users_page');
    //router.push("/admin/manage_users_page");
  };

  const getInvalidUsers = async()=>{
    router.push({
      pathname: '/admin/invalid_users',
    },'/admin/invalid_users');
  }
  const getAccount = () =>{
    router.push("/account_page")
  }

  //bg-[url('/backgound.png')]

  return (
    <>
      <Head>
        <title>Accueil</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col min-w-screen min-h-screen items-center relative bg-[url('/backgound.png')] font-PlayfairDisplay">
        <div className="h-[75px] drop-shadow-lg border bg-white w-screen flex flex-row justify-around items-center">
          <div onClick={() => mainPage()}>
            <img
              src="https://www.wunjo.life/wp-content/uploads/2020/12/Logo-Twitter-200x200-1.png"
              alt="Logo Wunjo"
              className="h-14 w-14 rounded-full cursor-pointer"
            />
          </div>
          {user?.email && (
            <button
              title="Se deconnecter"
              className="border rounded-full w-[50px] h-[50px] block mx-2 flex justify-center items-center"
              onClick={logout}
            >
              <BiLogOutCircle size={30} />
            </button>
          )}
          {user?.email && (
            <button
              title="Réaliser un auto-diagnostic QVT personnelle"
              className="border rounded-full w-[50px] h-[50px] flex justify-center items-center"
              onClick={taketest}
            >
              <BiNote size={30} />
            </button>
            {user?.role =="Admin"  && (
              <button
                title="Ajouter ou Supprimer des Utilisateurs"
                className="border rounded-full w-[80px] h-[80px] flex justify-center items-center"
                onClick={getusers}
              >
                <BiGroup size={30} />
              </button>
            )}
            {(user?.role =="Admin" || user?.role =="Consultants")  && (
              <button
                title="Ajouter ou Supprimer des Utilisateurs"
                className="border rounded-full w-[80px] h-[80px] flex justify-center items-center"
                onClick={getInvalidUsers}
              >
                <BiXCircle size={30} />
              </button>
            )}
              <button
                title="Ajouter ou Supprimer des Utilisateurs"
                className="border rounded-full w-[80px] h-[80px] flex justify-center items-center"
                onClick={getAccount}
              >
                <BiUser size={30} />
              </button>
          </div>
        </div>
        <Footer />
      </main>
    </>
  );
}

export default Layout;
