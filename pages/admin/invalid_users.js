import { useState,useEffect } from "react";
import cookies from "next-cookies";
import Head from "next/head";
import { Inter } from "@next/font/google";
import UserItem from "../../components/Users/UserItem";
import AddUser from "../../components/Users/AddUser";
import { BiArrowBack } from "react-icons/bi";
import { verifyJwt } from "../../utils/jwt";
import { useRouter } from "next/router";
const inter = Inter({ subsets: ["latin"] });
function InvalidUsers({ users }) {
    const [allUsers, setAllUsers] = useState(users)
    return (
        <>
        <Head>
          <title>Manager les Utilisateurs</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className="min-h-full w-full flex flex-col p-20 bg-[url('/backgound.png')] bg-repeat font-PlayfairDisplay">
            
            
            
                <ul className="list-none  m-4 p-5 grid grid-cols-4 gap-4 w-full h-max">
                    {
                      allUsers.length?allUsers.map((value,index)=><UserItem user = {value} key = {index}  handleDeleteUser={handleDeleteUser}/>)
                      :<div>Il n'y a rien Ã  afficher</div>
                    }
                </ul>
        
          
    
        </main>
      </>
      );
}
export async function getServerSideProps(context) {
    const token = cookies(context).token;
    const email = verifyJwt(token) != null ? verifyJwt(token).email : "nomail";
    const usersResponse = await fetch(`${process.env.NEXT_PUBLIC_APP_URL}/api/user/status/invalide`, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          token: token,
        },
      });
    let usersResponseJson = { data: {} };
    if (usersResponse.ok) {
        usersResponseJson = await usersResponse.json();
    }
    return {
        props: {users: usersResponseJson.data }, // will be passed to the page component as props
      };
}

export default InvalidUsers